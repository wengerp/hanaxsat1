context PurchaseOrder {
	type AutoKey : Integer64;
    type BusinessKey : String(10);
    type SDate : LocalDate;
    type CurrencyT : String(5);
    type AmountT : Decimal(15, 2);
    type QuantityT : Decimal(13, 3);
    type UnitT : String(3);
    type StatusT : String(1);
    type HistoryT {
        CREATEDBY : BusinessKey;
        CREATEDAT : SDate;
        CHANGEDBY : BusinessKey;
        CHANGEDAT : SDate;
    };

    entity Header {
        key PURCHASEORDERID : AutoKey generated by default as identity;
            ITEMS           : association[*] to Item on ITEMS.PURCHASEORDERID = PURCHASEORDERID;
            HISTORY         : HistoryT;
            NOTEID          : BusinessKey null;
            PARTNER         : BusinessKey;
            CURRENCY        : CurrencyT;
            GROSSAMOUNT     : AmountT;
            NETAMOUNT       : AmountT;
            TAXAMOUNT       : AmountT;
            LIFECYCLESTATUS : StatusT;
            APPROVALSTATUS  : StatusT;
            CONFIRMSTATUS   : StatusT;
            ORDERINGSTATUS  : StatusT;
            INVOICINGSTATUS : StatusT;
    }
    technical configuration {
        column store;
    };

    entity Item {
        key PURCHASEORDERID   : AutoKey;
        key PURCHASEORDERITEM : AutoKey generated by default as identity;
            HEADER            : association[1] to Header on HEADER.PURCHASEORDERID = PURCHASEORDERID;
            PRODUCT           : BusinessKey;
            NOTEID            : BusinessKey null;
            CURRENCY          : CurrencyT;
            GROSSAMOUNT       : AmountT;
            NETAMOUNT         : AmountT;
            TAXAMOUNT         : AmountT;
            QUANTITY          : QuantityT;
            QUANTITYUNIT      : UnitT;
            DELIVERYDATE      : SDate;
    }
    technical configuration {
        column store;
    };

    define view ItemView as
        select from Item
        {
            PURCHASEORDERID   as "PurchaseOrderItemId",
            PURCHASEORDERITEM as "ItemPos",
            HEADER.PARTNER    as "PartnerId",
            PRODUCT           as "ProductID",
            CURRENCY          as "CurrencyCode",
            GROSSAMOUNT       as "Amount",
            NETAMOUNT         as "NetAmount",
            TAXAMOUNT         as "TaxAmount",
            QUANTITY          as "Quantity",
            QUANTITYUNIT      as "QuantityUnit",
            DELIVERYDATE      as "DeliveryDate1"
        }
        with structured privilege check;
};